name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

permissions:
  contents: write
  id-token: write # For npm provenance

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Bump version (manual trigger only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Bump version based on input
          pnpm version ${{ github.event.inputs.release_type }} --no-git-tag-version
          
          # Get new version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          
          # Commit version bump
          git add package.json
          git commit -m "chore: bump version to v$NEW_VERSION"
          git push

      - name: Get version from package.json
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Run quality checks
        run: |
          pnpm run check
          pnpm run typecheck
          pnpm run test

      - name: Build package
        run: pnpm run build

      - name: Publish to npm
        run: pnpm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release (manual trigger only)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION || env.VERSION }}
          release_name: v${{ env.NEW_VERSION || env.VERSION }}
          body: |
            ## ðŸš€ Release v${{ env.NEW_VERSION || env.VERSION }}
            
            ### What's New
            
            - Improvements and bug fixes
            - Enhanced CLI experience
            - Better Starlight integration
            
            ### Installation
            
            ```bash
            npx @entro314labs/starlight-document-converter
            ```
            
            ### Full Changelog
            
            See all changes: https://github.com/${{ github.repository }}/compare/v${{ env.PREVIOUS_VERSION }}...v${{ env.NEW_VERSION || env.VERSION }}
          draft: false
          prerelease: false

      - name: Update release notes
        if: github.event_name == 'release'
        run: |
          echo "ðŸ“¦ Published @entro314labs/starlight-document-converter@${{ env.VERSION }} to npm"
          echo "ðŸ”— Package: https://www.npmjs.com/package/@entro314labs/starlight-document-converter"